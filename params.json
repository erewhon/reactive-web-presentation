{"name":"Reactive-web-presentation","tagline":"(Functional) Reactive Web Development presentation","body":"# (Functional) Reactive Web Development\r\n\r\nThis contains everything from my November 2014 presentation for the\r\nHouston Functional Programming Meetup.\r\n\r\n# References\r\n\r\n[Further Reading](presentation/presentation.html#/further-reading)\r\n\r\n# Getting Started\r\n\r\nTo clone:\r\n\r\n        git clone https://github.com/erewhon/reactive-web-presentation.git\r\n\r\n# Artifacts and building\r\n\r\nTo rebuild the presentation using Pandoc:\r\n\r\n        cd presentation && ./mk\r\n\r\n[Presentation](presentation/presentation.html)\r\n\r\n## Act 1\r\n\r\n[Plain HTML](act1-html/)\r\n\r\n[jQuery](act1-jquery/)\r\n\r\n## Act 2\r\n\r\nTo fetch BaconJS dependencies:\r\n\r\n        cd act2-baconjs && bower install bacon\r\n\r\n[BaconJS](act2-baconjs/):\r\n\r\n[RxJS](act2-rxjs/):\r\n\r\n## Act 3\r\n\r\nIf you have Elm installed, run the following to start the Reactor:\r\n\r\n        cd act3-elm\r\n        elm-get install\r\n        elm --make --only-js Schnippets.elm\r\n        elm-reactor\r\n\r\nThen open [the reactor](http://localhost:8000/).\r\n\r\n## Presentation\r\n\r\nThe \"./scripts/start\" will open all of the examples through the reactor, plus the presentation.\r\n\r\n# Notes\r\n\r\nTo keep things somewhat of an apples-to-apples comparison, we try to\r\nminimize external dependencies.  But we're also trying to keep the\r\nsame semantics.  Since the Elm code builds HTML in the code itself, in\r\nthe Javascript-based examples, I'm doing everything in Javascript.\r\nThat includes using Javascript templates.  (Handlebars is my weapon of\r\nchoice.)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}